# Hyperparameters follow the classic Nature DQN, but we modify as necessary to
# match those used in Rainbow (Hessel et al., 2018), to ensure apples-to-apples
# comparison.
import dopamine.atari.run_experiment
import dopamine.agents.lpg.lpg_agent
import dopamine.replay_memory.circular_replay_buffer
import gin.tf.external_configurables

LPGAgent.gamma = 0.99
LPGAgent.game_name = 'Pong' # Boxing, Pong
LPGAgent.update_horizon = 1
LPGAgent.min_replay_history = 200000  # agent steps, step more than this, stop exploration.
LPGAgent.update_period = 4
LPGAgent.epsilon_train = 0.0001
LPGAgent.epsilon_eval = 0
LPGAgent.epsilon_decay_period = 250000  # agent steps
LPGAgent.tf_device = '/gpu:0'  # use '/cpu:*' for non-GPU version
LPGAgent.optimizer = @tf.train.RMSPropOptimizer()
LPGAgent.margin = 1

tf.train.RMSPropOptimizer.learning_rate = 0.00025
tf.train.RMSPropOptimizer.decay = 0.95
tf.train.RMSPropOptimizer.momentum = 0.0
tf.train.RMSPropOptimizer.epsilon = 0.00001
tf.train.RMSPropOptimizer.centered = True

Runner.game_name = 'Pong'  # Boxing, Pong
# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
Runner.sticky_actions = False
Runner.num_iterations = 15
Runner.training_steps = 250000  # agent steps
Runner.evaluation_steps = 10000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

WrappedReplayBuffer.replay_capacity = 1000000
WrappedReplayBuffer.batch_size = 512
